# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

on: [push, pull_request]
name: ci
jobs:
  check-pr:
    name: validate commits
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - run: git fetch origin master
    - uses: flux-framework/pr-validator@master

  python-format:
    name: python format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with black
      run: |
        pip install --upgrade black==20.8b1 click==8.0.2
        # return the status of running black formatter
        black . --check

  python-lint:
    name: python lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: install pylint
      run: python3 -m pip install 'pylint==2.4.4' --force-reinstall
    - name: run pylint
      run: ./scripts/pylint

  generate-matrix:
    # https://stackoverflow.com/questions/59977364
    name: generate build matrix
    runs-on: ubuntu-latest
    outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - id: set-matrix
      run: echo "::set-output name=matrix::$(src/test/generate-matrix.py)"
    - run: src/test/generate-matrix.py | jq -S .
    - run: echo "::set-output name=GITHUB_BRANCH::${GITHUB_REF#refs/heads}"
    - run: echo "::set-output name=GITHUB_TAG::${GITHUB_REF#refs/tags}"
    - run: echo "::set-output name=EVENT_NAME::${{github.event_name}}"

  ci-checks:
    needs: [ generate-matrix ]
    runs-on: ubuntu-latest
    env:
      TAP_DRIVER_QUIET: 1
      FLUX_TEST_TIMEOUT: 300
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 30
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
      fail-fast: false
    name: ${{matrix.name}}
    steps:
    - uses: actions/checkout@v2
      with:
       ref: ${{ github.event.pull_request.head.sha }}
       fetch-depth: 0

    - name: coverage setup
      env: ${{matrix.env}}
      if: matrix.coverage
      run: |
        # Use python3 coverage to match version in flux docker image
        sudo apt update ; \
        sudo apt install -yy python3-pip ; \
        pip3 install --upgrade pip ;
        pip3 install --upgrade --force-reinstall coverage ;

    - name: docker-run-checks
      env: ${{matrix.env}}
      run: ${{matrix.command}}

    - name: coverage report
      if: success() && matrix.coverage
      run: DOCKER_REPO= bash <(curl -s https://codecov.io/bash)

    - name: annotate errors
      if: failure() || cancelled()
      env: ${{matrix.env}}
      run: src/test/checks-annotate.sh
